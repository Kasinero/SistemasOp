#include <iostream>
#include <thread>
#include <chrono>

void short_duration_process() {
    // Processo de curta duração
    std::cout << "Processo de curta duração iniciado." << std::endl;
    std::this_thread::sleep_for(std::chrono::seconds(3)); // Simula uma operação curta
    std::cout << "Processo de curta duração finalizado." << std::endl;
}

void long_duration_process() {
    // Processo de longa duração
    std::cout << "Processo de longa duração iniciado." << std::endl;
    while (true) {
        std::this_thread::sleep_for(std::chrono::seconds(5)); // Simula uma operação longa
        std::cout << "Processo de longa duração ainda em execução..." << std::endl;
    }
}

int main() {
    // Criar threads para processos de curta e longa duração
    std::thread t1(short_duration_process);
    std::thread t2(long_duration_process);

    // Aguardar a conclusão das threads
    t1.join();
    t2.join();

    return 0;
}
